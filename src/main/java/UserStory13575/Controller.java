package UserStory13575;


	import java.awt.event.ActionEvent;
	import java.awt.event.ActionListener;
	import java.awt.event.MouseAdapter;
	import java.awt.event.MouseEvent;
	import java.util.List;

	import javax.swing.table.TableModel;

	import BaseProject.SwingUtil;
	//import Entities.FormativeAction;

	public class Controller {
		private Model model;
		private View view;
		private String lastSelectedKey=""; //remembers the last selected row to restore it when changing the race table
		
		public Controller() {
			this.model = new Model();
			this.view = new View();
			//no model-specific initialization, only view-specific initialization
			this.initView();
		}
		
		/**
		 * Controller initialization: add event handlers to the UI objects.
		 * Each event handler is instantiated in the same way, so that it invokes a private method of this handler, enclosed in a generic exception handler to display windows.
		 * Each event handler is instantiated in the same way, so that it invokes a private method of this controller, enclosed in a generic exception handler to display popup windows when a problem or exception occurs.
		 * popup windows when a problem or controlled exception occurs.
		 */
		public void initController() {
			
			view.getConfirmButton().addActionListener(new ActionListener() {
			 	public void actionPerformed(ActionEvent e) {
			 		
			 	}
			 });
		}
		
		
		public void initView() {
			//Open window (replaces the main generated by WindowBuilder)
			view.setVisible(true); 
		}

		
		/**
		 * When selecting an item in the table, it shows the detail with the value of the discount percentage of the selected race and the values of this entity.
		 * of the selected race and the values of this entity.
		 */
		public void createFormativeAction() {
			//FormativeAction formativeAction = new FormativeAction(view.getName(), view.getObjectives(), view.getMainContents(), view.getTeacher(), Integer.parseInt(view.getRemuneration()), view.getLocation(), view.getDay(), Integer.parseInt(view.getNumberOfHours()), Integer.parseInt(view.getSpaces()), view.getEnrollmentPeriodStart(), view.getEnrollmentPeriodEnd());
			//model.setFormativeAction(formativeAction);
		}
		


}
